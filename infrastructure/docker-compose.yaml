services:
    database:
        image: "postgres:14"
        container_name: "ecommerce-database"
        ports:
            - "5432:5432"
        environment:
            POSTGRES_PASSWORD: password
        volumes:
            - ./initialize-databases.sql:/docker-entrypoint-initdb.d/init.sql

    zookeeper:
        image: quay.io/strimzi/kafka:0.41.0-kafka-3.7.0
        container_name: "zookeeper"
        command: [
                "sh", "-c",
                "bin/zookeeper-server-start.sh config/zookeeper.properties"
        ]
        ports:
            - "2181:2181"
        environment:
            LOG_DIR: /tmp/logs

    kafka:
        image: quay.io/strimzi/kafka:0.41.0-kafka-3.7.0
        container_name: "kafka"
        command: [
                "sh", "-c",
                "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} --override auto.create.topics.enable=$${KAFKA_AUTO_CREATE_TOPICS_ENABLE}"
        ]
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "29092:29092"
        environment:
            LOG_DIR: "/tmp/logs"
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"


    # console:
    #     image: docker.redpanda.com/redpandadata/console:v2.3.8
    #     restart: on-failure
    #     entrypoint: /bin/sh
    #     command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    #     environment:
    #         CONFIG_FILEPATH: /tmp/config.yml
    #         CONSOLE_CONFIG_FILE: |
    #             kafka:
    #                 brokers: ["kafka:29092"]
    #     ports:
    #         - "8080:9090"
    #     depends_on:
    #         - kafka

    redpanda-console:
      image: docker.redpanda.com/redpandadata/console:v2.3.8
      container_name: redpanda-console
      ports:
        - "9090:8080"           # Web UI for Redpanda Console
      environment:
        KAFKA_BROKERS: "kafka:29092"   # Kafka broker address
        SERVER_PORT: 8080
        CONNECT_TLS_ENABLED: "false"  # Disable TLS for simplicity
        REDPANDA_ENABLE_SCHEMA_REGISTRY: "false"
        CONSOLE_REFRESH_INTERVAL_MS: 5000
      depends_on:
        - kafka
      restart: unless-stopped
